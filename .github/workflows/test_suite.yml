name: Test Suite

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    if: |
      !contains(github.event.head_commit.message || '', 'no-test') &&
      !contains(github.event.pull_request.title || '', 'no-test')
    runs-on: ubuntu-latest
    timeout-minutes: 120    # Changed to 120 minutes
    strategy:
      matrix:
        python-version: ["3.13", "3.12", "3.11", "3.10", "3.9"]      
    env:
      POETRY_VERSION: "1.7.1"
    steps:
      - uses: actions/checkout@v3

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Graphviz
        run: sudo apt-get update && sudo apt-get install -y graphviz

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}

      - name: Cache Poetry virtualenv
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        shell: bash
        run: poetry install --with dev

      - name: Run starter tutorial integration test
        if: matrix.python-version == '3.9'
        shell: bash
        run: poetry run make test-starter-tutorial
        env:
          EXPECTED_PARROT_API_KEY: ${{ secrets.INTEGRATION_TEST_EXPECTED_PARROT_API_KEY_CHICK }}
          EXPECTED_PARROT_URL: "https://chick.expectedparrot.com"
      - name: Run edsl tests
        shell: bash
        run: poetry run make test

      - name: Run doctests
        shell: bash
        run: poetry run make test-doctests
